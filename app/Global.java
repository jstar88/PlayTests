import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import play.Application;
import play.GlobalSettings;

public class Global extends GlobalSettings
{
	@Override
	public void onStart(Application app)
	{
		String newline = System.getProperty("line.separator");
		File route = app.getFile("/conf/routes");
		File[] modules = app.getFile("/modules").listFiles();

		String newContents = "# start of autogenerated code" + newline;
		for (File module : modules)
		{
			String moduleLow = module.getName().toLowerCase();
			newContents += "-> /module/"+moduleLow +"      " + moduleLow + ".Routes " + newline;
		}
		newContents += "# end of autogenerated code" + newline;
		editRoute(route, newContents, newline);

	}

	private void editRoute(File route, String newContents, String newline)
	{
		try
		{
			FileReader f = new FileReader(route);
			BufferedReader br = new BufferedReader(f);
			String contents = "";
			while (true)
			{
				String s = br.readLine();
				if (s == null)
					break;
				contents += s + newline;
			}
			br.close();

			FileWriter w = new FileWriter(route);
			BufferedWriter b = new BufferedWriter(w);
			b.write(newContents + contents);
			b.flush();
			b.close();
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
	}

	@Override
	public void onStop(Application app)
	{
		String newline = System.getProperty("line.separator");
		File route = app.getFile("/conf/routes");
		try
		{
			FileReader f = new FileReader(route);
			BufferedReader br = new BufferedReader(f);
			String contents = "";
			boolean startAutoCode = false;
			boolean endAutoCode = false;
			while (true)
			{
				String s = br.readLine();
				if (s == null)
					break;
				if (s.contains("# start of autogenerated code"))
				{
					startAutoCode = true;
				}
				else if (s.contains("# end of autogenerated code"))
				{
					endAutoCode = true;
					continue;
				}

				if (!startAutoCode || endAutoCode)
				{
					contents += s + newline;
				}
			}
			br.close();

			FileWriter w = new FileWriter(route);
			BufferedWriter b = new BufferedWriter(w);
			b.write(contents);
			b.flush();
			b.close();
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
	}
}
